name: CI

on:
  push:
    branches:
      - 'main'
      - 'v*-dev'
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - 'main'
      - 'v*-dev'

env:
  NODE_VERSION: '21'

jobs:
  deps:
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.3.0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'
          cache: 'pnpm'
      - name: Deps
        run: scripts/deps
        env:
          LOCK: true
      - name: Archive Modules
        timeout-minutes: 5
        uses: actions/cache/save@v4
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          path: |
            ${{ github.workspace }}/node_modules

  build:
    needs:
      - deps
    if: github.event_name == 'pull_request'
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Unarchive Node Modules
        timeout-minutes: 5
        uses: actions/cache/restore@v4
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          path: |
            ${{ github.workspace }}/node_modules
      - name: Build
        run: scripts/build

  build-publish:
    needs:
      - deps
    if: github.event_name == 'push'
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Unarchive Node Modules
        timeout-minutes: 5
        uses: actions/cache/restore@v4
        with:
          key: node-modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          path: |
            ${{ github.workspace }}/node_modules
      - name: Build
        run: scripts/build
      - name: Determine Version
        id: version
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "version=latest" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/heads/v*-dev ]]; then
            echo "version=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          else
            echo "Not a publish target"
            exit 1
          fi
      - name: Package
        run: scripts/package
        env:
          VERSION: '${{ steps.version.outputs.version }}'
      - name: Release
        uses: TencentCloud/cos-action@b0aa648235fb35a1bdd6a77f529eb0ac4c2f1c25
        with:
          secret_id: ${{ secrets.CI_TECENTCOS_SECRET_ID }}
          secret_key: ${{ secrets.CI_TECENTCOS_SECRET_KEY }}
          cos_bucket: ${{ secrets.COS_BUCKET }}
          cos_region: ${{ secrets.COS_REGION }}
          local_path: dist/${{ steps.version.outputs.version }}.tar.gz
          remote_path: releases/${{ steps.version.outputs.version }}.tar.gz
          accelerate: true
          clean: false
